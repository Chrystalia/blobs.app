{"version":3,"sources":["webpack://blobs.app/./node_modules/@chakra-ui/icons/dist/esm/ArrowBack.js","webpack://blobs.app/./node_modules/@chakra-ui/layout/dist/esm/grid.js","webpack://blobs.app/./node_modules/@chakra-ui/layout/dist/esm/simple-grid.js","webpack://blobs.app/./src/components/SavedBlobs.js","webpack://blobs.app/./src/pages/saved-blobs.js"],"names":["ArrowBackIcon","d","displayName","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","Grid","forwardRef","props","ref","area","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridArea","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","chakra","__css","__DEV__","SimpleGrid","count","width","columns","spacingX","spacingY","spacing","minChildWidth","mapResponsive","value","isNull","n","isNumber","dynamic","savedBlobs","deleteBlob","loadBlobs","cardHoverBg","useColorModeValue","useEffect","textAlign","my","fontSize","sm","md","mb","justifyContent","map","blob","rounded","p","borderWidth","_hover","boxShadow","background","role","alignItems","style","textTransform","fontWeight","href","url","name","variant","visibility","h","_groupHover","onClick","id","color","mt","Blob","Layout","SEO","title","description","Logo","size","Link","to"],"mappings":"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","file":"component---src-pages-saved-blobs-js-9ff340237f3344c7e360.js","sourcesContent":["import { createIcon } from \"@chakra-ui/icon\";\nexport var ArrowBackIcon = createIcon({\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\",\n  displayName: \"ArrowBackIcon\"\n});","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { filterUndefined, mapResponsive, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/docs/layout/grid\n */\n\nexport var Grid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var area = props.area,\n      templateAreas = props.templateAreas,\n      gap = props.gap,\n      rowGap = props.rowGap,\n      columnGap = props.columnGap,\n      column = props.column,\n      row = props.row,\n      autoFlow = props.autoFlow,\n      autoRows = props.autoRows,\n      templateRows = props.templateRows,\n      autoColumns = props.autoColumns,\n      templateColumns = props.templateColumns,\n      rest = _objectWithoutPropertiesLoose(props, [\"area\", \"templateAreas\", \"gap\", \"rowGap\", \"columnGap\", \"column\", \"row\", \"autoFlow\", \"autoRows\", \"templateRows\", \"autoColumns\", \"templateColumns\"]);\n\n  var styles = {\n    display: \"grid\",\n    gridArea: area,\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});\n\nif (__DEV__) {\n  Grid.displayName = \"Grid\";\n}\n\nfunction spanFn(span) {\n  return mapResponsive(span, function (value) {\n    return value === \"auto\" ? \"auto\" : \"span \" + value + \"/span \" + value;\n  });\n}\n\nexport var GridItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var colSpan = props.colSpan,\n      colStart = props.colStart,\n      colEnd = props.colEnd,\n      rowEnd = props.rowEnd,\n      rowSpan = props.rowSpan,\n      rowStart = props.rowStart,\n      rest = _objectWithoutPropertiesLoose(props, [\"colSpan\", \"colStart\", \"colEnd\", \"rowEnd\", \"rowSpan\", \"rowStart\"]);\n\n  var styles = filterUndefined({\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { mapResponsive, isNumber, isNull, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { Grid } from \"./grid\";\n/**\n * SimpleGrid\n *\n * React component make that providers a simpler interface, and\n * make its easy to create responsive grid layouts.\n *\n * @see Docs https://chakra-ui.com/docs/layout/simple-grid\n */\n\nexport var SimpleGrid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var columns = props.columns,\n      spacingX = props.spacingX,\n      spacingY = props.spacingY,\n      spacing = props.spacing,\n      minChildWidth = props.minChildWidth,\n      rest = _objectWithoutPropertiesLoose(props, [\"columns\", \"spacingX\", \"spacingY\", \"spacing\", \"minChildWidth\"]);\n\n  var templateColumns = minChildWidth ? widthToColumns(minChildWidth) : countToColumns(columns);\n  return /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns: templateColumns\n  }, rest));\n});\n\nif (__DEV__) {\n  SimpleGrid.displayName = \"SimpleGrid\";\n}\n\nfunction toPx(n) {\n  return isNumber(n) ? n + \"px\" : n;\n}\n\nfunction widthToColumns(width) {\n  return mapResponsive(width, function (value) {\n    return isNull(value) ? null : \"repeat(auto-fit, minmax(\" + toPx(value) + \", 1fr))\";\n  });\n}\n\nfunction countToColumns(count) {\n  return mapResponsive(count, function (value) {\n    return isNull(value) ? null : \"repeat(\" + value + \", minmax(0, 1fr))\";\n  });\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport {\n  Box,\n  Button,\n  Divider,\n  LinkBox,\n  LinkOverlay,\n  SimpleGrid,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport React, { useEffect } from 'react';\nimport { dynamic } from '../state';\nimport Blob from './Blob';\nimport { TrashIcon } from './Common/Icons';\n\nconst SavedBlobs = ({ savedBlobs = [], deleteBlob, loadBlobs }) => {\n  const cardHoverBg = useColorModeValue('gray.100', 'gray.700');\n  useEffect(() => {\n    if (!savedBlobs) loadBlobs();\n  }, [savedBlobs]);\n  return (\n    <Box>\n      {savedBlobs?.length === 0 && (\n        <Box textAlign=\"center\">\n          <Text my=\"20\" fontSize=\"2xl\">\n            No saved blobs found!\n          </Text>\n        </Box>\n      )}\n      <SimpleGrid\n        columns={{ sm: 2, md: 4 }}\n        spacing=\"40px\"\n        mb=\"20\"\n        justifyContent=\"center\"\n      >\n        {savedBlobs?.map((blob) => (\n          <LinkBox\n            // h=\"200\"\n            rounded=\"2xl\"\n            p=\"5\"\n            borderWidth=\"1px\"\n            _hover={{ boxShadow: '2xl', background: cardHoverBg }}\n            role=\"group\"\n          >\n            <Text\n              fontSize=\"sm\"\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n            >\n              <LinkOverlay\n                style={{ textTransform: 'uppercase', fontWeight: 600 }}\n                href={blob.url}\n              >\n                {blob.name}\n              </LinkOverlay>\n              <Button\n                variant=\"unstyled\"\n                visibility=\"hidden\"\n                h=\"auto\"\n                _groupHover={{ visibility: 'visible' }}\n                onClick={() => {\n                  deleteBlob(blob.id);\n                }}\n              >\n                <TrashIcon color=\"tomato\" />\n              </Button>\n            </Text>\n            <Divider mt=\"4\" />\n\n            <Blob {...blob} />\n          </LinkBox>\n        ))}\n      </SimpleGrid>\n    </Box>\n  );\n};\nexport default dynamic(SavedBlobs, ['savedBlobs']);\n","import * as React from 'react';\nimport { Link } from 'gatsby';\n\nimport { Box, Center, Heading, Text } from '@chakra-ui/react';\nimport { ArrowBackIcon } from '@chakra-ui/icons';\nimport SEO from '../components/SEO';\n\nimport Logo from '../components/Common/Logo';\nimport SavedBlobs from '../components/SavedBlobs';\nimport Layout from '../components/Layout';\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO\n      title=\"Save blobs locally and access them anytime even when in offline\"\n      description=\"Customizable blobs as SVG and Flutter Widget. Create random or fixed blobs, loop, animate, clip them with ease\"\n    />\n    <Box my=\"10\" textAlign=\"center\">\n      <Logo />\n      <Heading\n        size=\"xl\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        variant=\"main\"\n      >\n        Browse saved blobs\n      </Heading>\n      <Text my=\"2\" variant=\"subtle\">\n        Click on the any blob card to navigate to edit screen\n      </Text>\n    </Box>\n    <SavedBlobs />\n    <Center>\n      <Link to=\"/\">\n        {' '}\n        <ArrowBackIcon />\n        Go back to the homepage\n      </Link>\n    </Center>\n  </Layout>\n);\n\nexport default SecondPage;\n"],"sourceRoot":""}